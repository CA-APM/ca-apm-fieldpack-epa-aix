########################################################################
# Introscope EPAgent Plugin Script Config File
#                                                                      
# CA Wily Introscope(R) Version 9.0.6.0 Release 9.0.6.0
# Copyright (c) 2011 CA. All Rights Reserved.
# Introscope(R) is a registered trademark of CA.
#
########################################################################
# NMON LOG READER CONFIGURATION FILE 
########################################################################

# Comments are started by the '#' character

# The Directory in which the log files are located
#
LOGFILEDIR = 'C:/temp/logs'

# The name of the log file written to
# This should be a regular expression if it
# changes over time
# NOTE: this must match the entire name of the file (without path)
LOGFILE = 'XXXXXX\_(\d+)\_(\d+)\.nmon'

# The time to sleep between checking the log file
# for new messages
SLEEPTIME = 15

# The Resource Part of the metric name
RESOURCE = 'NMON'

# The Sub-Resource part of the metric name
# This defaults to nothing.
SUBRESOURCE = ''

# The delimiter tells how to parse the lines of the log.
#DELIMITER = ','

# Metrics
# Each metric configuration block has:
# 1) match => a regular expression to match
# 2) metricName => a metric name to report    
# 3) metricValue => a metric value to report
# 
# The metric name and value will be evaluated and can make use of 
# the following built in variables:
#   i)    $LOG          - the name of the logfile (without path)
#   ii)   $TOTALCOUNT   - the # of times this match has been made since startup
#   iii)  $CURRENTCOUNT - the # of times this match has been made so far in 
#                         the current batch of lines being read
#   iv)   $DATE         - the current system date/time
#
# The metric name and value must be valid string literals or
# valid Perl regular expressions.
#   
# To add a new metric, follow the syntax of the ones provided.
#

METRICS = [ 

	{
	 match => '^ZZZZ.*(\d{2}:\d{2}:\d{2})',
	 metricType => 'StringEvent',
	 metricName => 'Last Run Time',
	 metricValue => '$1'
	},
	
	{
	 match => '^ZZZZ.*(\d{2}\-\w{3}\-\d{4})',
	 metricType => 'StringEvent',
	 metricName => 'Last Run Date',
	 metricValue => '$1'
	},
	
#	{
#	 match => '^CPU\s.*',
#	 metricType => 'IntCounter',
#	 metricName => 'Total Cores',
#	 metricValue => 'CURRENTCOUNT'
#	},

	{
	 match => '^(CPU\d{2})\,\w{5}\,(\d+\.\d{1})\,(\d+\.\d{1})\,(\d+\.\d{1})\,(\d+\.\d{1})',
	 metricType => 'IntCounter',
	 metricName => '$1|User (%)',
	 metricValue => '$2'
	},
	
	{
	 match => '^(CPU\d{2})\,\w{5}\,(\d+\.\d{1})\,(\d+\.\d{1})\,(\d+\.\d{1})\,(\d+\.\d{1})',
	 metricType => 'IntCounter',
	 metricName => '$1|System (%)',
	 metricValue => '$3'
	},
	
	{
	 match => '^(CPU\d{2})\,\w{5}\,(\d+\.\d{1})\,(\d+\.\d{1})\,(\d+\.\d{1})\,(\d+\.\d{1})',
	 metricType => 'IntCounter',
	 metricName => '$1|Wait (%)',
	 metricValue => '$4'
	},
	
	{
	 match => '^(CPU\d{2})\,\w{5}\,(\d+\.\d{1})\,(\d+\.\d{1})\,(\d+\.\d{1})\,(\d+\.\d{1})',
	 metricType => 'IntCounter',
	 metricName => '$1|Idle (%)',
	 metricValue => '$5'
	},
	
	{
	 match => '^(CPU\_ALL)\,\w{5}\,(\d+\.\d{1})\,(\d+\.\d{1})\,(\d+\.\d{1})\,(\d+\.\d{1})',
	 metricType => 'IntCounter',
	 metricName => '$1|User (%)',
	 metricValue => '$2'
	},
	
	{
	 match => '^(CPU\_ALL)\,\w{5}\,(\d+\.\d{1})\,(\d+\.\d{1})\,(\d+\.\d{1})\,(\d+\.\d{1})',
	 metricType => 'IntCounter',
	 metricName => '$1|System (%)',
	 metricValue => '$3'
	},
	
	{
	 match => '^(CPU\_ALL)\,\w{5}\,(\d+\.\d{1})\,(\d+\.\d{1})\,(\d+\.\d{1})\,(\d+\.\d{1})',
	 metricType => 'IntCounter',
	 metricName => '$1|Wait (%)',
	 metricValue => '$4'
	},
	
	{
	 match => '^(CPU\_ALL)\,\w{5}\,(\d+\.\d{1})\,(\d+\.\d{1})\,(\d+\.\d{1})\,(\d+\.\d{1})',
	 metricType => 'IntCounter',
	 metricName => '$1|Idle (%)',
	 metricValue => '$5'
	},

]
	 

